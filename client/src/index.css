@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: hsl(24 33.3333% 97.0588%);
  --foreground: hsl(0 0% 10.1961%);
  --card: hsl(24 33.3333% 97.0588%);
  --card-foreground: hsl(0 0% 10.1961%);
  --popover: hsl(24 33.3333% 97.0588%);
  --popover-foreground: hsl(0 0% 10.1961%);
  --primary: hsl(0 55.7789% 39.0196%);
  --primary-foreground: hsl(0 0% 100%);
  --secondary: hsl(43.0769 90.6977% 91.5686%);
  --secondary-foreground: hsl(39.8438 100% 25.0980%);
  --muted: hsl(22.5000 21.0526% 92.5490%);
  --muted-foreground: hsl(33.3333 5.4545% 32.3529%);
  --accent: hsl(48.0000 96.4912% 88.8235%);
  --accent-foreground: hsl(0 62.8205% 30.5882%);
  --destructive: hsl(0 70% 35.2941%);
  --destructive-foreground: hsl(0 0% 100%);
  --border: hsl(37.7143 63.6364% 89.2157%);
  --input: hsl(37.7143 63.6364% 89.2157%);
  --ring: hsl(0 55.7789% 39.0196%);
  --chart-1: hsl(0 73.7089% 41.7647%);
  --chart-2: hsl(0 55.7789% 39.0196%);
  --chart-3: hsl(0 62.8205% 30.5882%);
  --chart-4: hsl(25.9649 90.4762% 37.0588%);
  --chart-5: hsl(22.7273 82.5000% 31.3725%);
  --sidebar: hsl(22.5000 21.0526% 92.5490%);
  --sidebar-foreground: hsl(0 0% 10.1961%);
  --sidebar-primary: hsl(0 55.7789% 39.0196%);
  --sidebar-primary-foreground: hsl(0 0% 100%);
  --sidebar-accent: hsl(48.0000 96.4912% 88.8235%);
  --sidebar-accent-foreground: hsl(0 62.8205% 30.5882%);
  --sidebar-border: hsl(37.7143 63.6364% 89.2157%);
  --sidebar-ring: hsl(0 55.7789% 39.0196%);
  --font-sans: Poppins, sans-serif;
  --font-serif: Libre Baskerville, serif;
  --font-mono: IBM Plex Mono, monospace;
  --radius: 0.375rem;
  --shadow-2xs: 1px 1px 16px -2px hsl(0 63% 18% / 0.06);
  --shadow-xs: 1px 1px 16px -2px hsl(0 63% 18% / 0.06);
  --shadow-sm: 1px 1px 16px -2px hsl(0 63% 18% / 0.12), 1px 1px 2px -3px hsl(0 63% 18% / 0.12);
  --shadow: 1px 1px 16px -2px hsl(0 63% 18% / 0.12), 1px 1px 2px -3px hsl(0 63% 18% / 0.12);
  --shadow-md: 1px 1px 16px -2px hsl(0 63% 18% / 0.12), 1px 2px 4px -3px hsl(0 63% 18% / 0.12);
  --shadow-lg: 1px 1px 16px -2px hsl(0 63% 18% / 0.12), 1px 4px 6px -3px hsl(0 63% 18% / 0.12);
  --shadow-xl: 1px 1px 16px -2px hsl(0 63% 18% / 0.12), 1px 8px 10px -3px hsl(0 63% 18% / 0.12);
  --shadow-2xl: 1px 1px 16px -2px hsl(0 63% 18% / 0.30);
  --tracking-normal: 0em;
  --spacing: 0.25rem;
}

.dark {
  --background: hsl(24 9.8039% 10%);
  --foreground: hsl(60 4.7619% 95.8824%);
  --card: hsl(12.0000 6.4935% 15.0980%);
  --card-foreground: hsl(60 4.7619% 95.8824%);
  --popover: hsl(12.0000 6.4935% 15.0980%);
  --popover-foreground: hsl(60 4.7619% 95.8824%);
  --primary: hsl(0 73.7089% 41.7647%);
  --primary-foreground: hsl(24 33.3333% 97.0588%);
  --secondary: hsl(22.7273 82.5000% 31.3725%);
  --secondary-foreground: hsl(48.0000 96.4912% 88.8235%);
  --muted: hsl(12.0000 6.4935% 15.0980%);
  --muted-foreground: hsl(24.0000 5.7471% 82.9412%);
  --accent: hsl(25.9649 90.4762% 37.0588%);
  --accent-foreground: hsl(48.0000 96.4912% 88.8235%);
  --destructive: hsl(0 84.2365% 60.1961%);
  --destructive-foreground: hsl(0 0% 100%);
  --border: hsl(30 6.2500% 25.0980%);
  --input: hsl(30 6.2500% 25.0980%);
  --ring: hsl(0 73.7089% 41.7647%);
  --chart-1: hsl(0 90.6040% 70.7843%);
  --chart-2: hsl(0 84.2365% 60.1961%);
  --chart-3: hsl(0 72.2222% 50.5882%);
  --chart-4: hsl(43.2558 96.4126% 56.2745%);
  --chart-5: hsl(37.6923 92.1260% 50.1961%);
  --sidebar: hsl(24 9.8039% 10%);
  --sidebar-foreground: hsl(60 4.7619% 95.8824%);
  --sidebar-primary: hsl(0 73.7089% 41.7647%);
  --sidebar-primary-foreground: hsl(24 33.3333% 97.0588%);
  --sidebar-accent: hsl(25.9649 90.4762% 37.0588%);
  --sidebar-accent-foreground: hsl(48.0000 96.4912% 88.8235%);
  --sidebar-border: hsl(30 6.2500% 25.0980%);
  --sidebar-ring: hsl(0 73.7089% 41.7647%);
  --font-sans: Poppins, sans-serif;
  --font-serif: Libre Baskerville, serif;
  --font-mono: IBM Plex Mono, monospace;
  --radius: 0.375rem;
  --shadow-2xs: 1px 1px 16px -2px hsl(0 63% 18% / 0.06);
  --shadow-xs: 1px 1px 16px -2px hsl(0 63% 18% / 0.06);
  --shadow-sm: 1px 1px 16px -2px hsl(0 63% 18% / 0.12), 1px 1px 2px -3px hsl(0 63% 18% / 0.12);
  --shadow: 1px 1px 16px -2px hsl(0 63% 18% / 0.12), 1px 1px 2px -3px hsl(0 63% 18% / 0.12);
  --shadow-md: 1px 1px 16px -2px hsl(0 63% 18% / 0.12), 1px 2px 4px -3px hsl(0 63% 18% / 0.12);
  --shadow-lg: 1px 1px 16px -2px hsl(0 63% 18% / 0.12), 1px 4px 6px -3px hsl(0 63% 18% / 0.12);
  --shadow-xl: 1px 1px 16px -2px hsl(0 63% 18% / 0.12), 1px 8px 10px -3px hsl(0 63% 18% / 0.12);
  --shadow-2xl: 1px 1px 16px -2px hsl(0 63% 18% / 0.30);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}